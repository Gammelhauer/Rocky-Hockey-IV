<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RockyHockey.Common</name>
    </assembly>
    <members>
        <member name="F:RockyHockey.Common.CameraConfig.index">
            <summary>
            Index of the camera
            </summary>
        </member>
        <member name="P:RockyHockey.Common.CameraConfig.FieldSize">
            <summary>
            game field size in px
            </summary>
        </member>
        <member name="P:RockyHockey.Common.CameraConfig.Offset">
            <summary>
            camera offset
            </summary>
        </member>
        <member name="P:RockyHockey.Common.CameraConfig.UpperLeft">
            <summary>
            upper left position for warping
            </summary>
        </member>
        <member name="P:RockyHockey.Common.CameraConfig.UpperRight">
            <summary>
            upper right position for warping
            </summary>
        </member>
        <member name="P:RockyHockey.Common.CameraConfig.LowerRight">
            <summary>
            lower right position for warping
            </summary>
        </member>
        <member name="P:RockyHockey.Common.CameraConfig.LowerLeft">
            <summary>
            lower left position for warping
            </summary>
        </member>
        <member name="T:RockyHockey.Common.CameraOffset">
            <summary>
            class to store the offset of the camera to the game field
            </summary>
        </member>
        <member name="P:RockyHockey.Common.CameraOffset.FromTop">
            <summary>
            X-Position
            </summary>
        </member>
        <member name="P:RockyHockey.Common.CameraOffset.FromLeft">
            <summary>
            Y-Position
            </summary>
        </member>
        <member name="T:RockyHockey.Common.Config">
            <summary>
            Holds all values that describe the configuration of the application
            </summary>
        </member>
        <member name="M:RockyHockey.Common.Config.Load">
            <summary>
            tries to load config from file
            if none exists a new config gets created
            </summary>
            <returns></returns>
        </member>
        <member name="M:RockyHockey.Common.Config.save">
            <summary>
            saves / serializes config object into file
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Config.Instance">
            <summary>
            Singleton instance
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Config.Camera1">
            <summary>
            config of camera 1
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Config.Camera2">
            <summary>
            config of camera 2
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Config.GameFieldSize">
            <summary>
            Size of the gamefield
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Config.ImaginaryAxePosition">
            <summary>
            Position of the imaginary axis
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Config.Tolerance">
            <summary>
            Tolerance in pixels
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Config.FrameRate">
            <summary>
            Framerate of the camera
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Config.GameDifficulty">
            <summary>
            Difficulty of the RockyHockey game
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Config.MaxBatVelocity">
            <summary>
            Maximum velocity of the bat
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Config.RestPositionDivisor">
            <summary>
            Determines the Bat Rest Position on the X-Axis
            </summary>
        </member>
        <member name="T:RockyHockey.Common.ConsoleLogger">
            <summary>
            Logger that logs on the console
            </summary>
        </member>
        <member name="M:RockyHockey.Common.ConsoleLogger.Log(System.String)">
            <summary>
            Logs the text onto the console
            </summary>
            <param name="text">text to log</param>
            <returns>executeable Task</returns>
        </member>
        <member name="T:RockyHockey.Common.Coordinate">
            <summary>
            represents a point on the game field
            </summary>
        </member>
        <member name="M:RockyHockey.Common.Coordinate.#ctor(System.Int32,System.Int32)">
            <summary>
            the constructor constructs an instance of the class of which it is the constructor (creates a coordinate with given x and y parts)
            </summary>
            <param name="x">x of the coordinate</param>
            <param name="y">y of the coordinate</param>
        </member>
        <member name="M:RockyHockey.Common.Coordinate.#ctor">
            <summary>
            the constructor constructs an instance of the class of which it is the constructor (creates a coordinate with x=0 and y=0)
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Coordinate.X">
            <summary>
            X-Coordinate
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Coordinate.Y">
            <summary>
            Y-Coordinate
            </summary>
        </member>
        <member name="T:RockyHockey.Common.Difficulties">
            <summary>
            Enumerates the available Difficulties for the RockyHockey game
            </summary>
        </member>
        <member name="F:RockyHockey.Common.Difficulties.easy">
            <summary>
            difficulty easy
            </summary>
        </member>
        <member name="F:RockyHockey.Common.Difficulties.medium">
            <summary>
            difficulty medium
            </summary>
        </member>
        <member name="F:RockyHockey.Common.Difficulties.hard">
            <summary>
            difficulty hard
            </summary>
        </member>
        <member name="T:RockyHockey.Common.FrameGameFieldPosition">
            <summary>
            GameFieldPosition with the number of the frame it was recorded
            </summary>
        </member>
        <member name="P:RockyHockey.Common.FrameGameFieldPosition.FrameNumber">
            <summary>
            Number of the frame, the position has been recorded
            </summary>
        </member>
        <member name="T:RockyHockey.Common.FrameVector">
            <summary>
            Vector with a frame number
            </summary>
        </member>
        <member name="P:RockyHockey.Common.FrameVector.FrameNumber">
            <summary>
            Number of the frame
            </summary>
        </member>
        <member name="T:RockyHockey.Common.GameFieldPosition">
            <summary>
            Klasse zum Speichern der Position eines Schl√§gers bzw. des Pucks
            </summary>
        </member>
        <member name="P:RockyHockey.Common.GameFieldPosition.X">
            <summary>
            X-Position
            </summary>
        </member>
        <member name="P:RockyHockey.Common.GameFieldPosition.Y">
            <summary>
            Y-Position
            </summary>
        </member>
        <member name="T:RockyHockey.Common.ILogger">
            <summary>
            Basic Logger-Interface
            </summary>
        </member>
        <member name="M:RockyHockey.Common.ILogger.Log(System.String)">
            <summary>
            Writes the String into the Log
            </summary>
            <param name="text">String to log</param>
            <returns>executeable Task</returns>
        </member>
        <member name="M:RockyHockey.Common.ILogger.Log(System.Exception)">
            <summary>
             Writes the exception into the log
            </summary>
            <param name="ex">Exception to log</param>
            <returns>executeable Task</returns>
        </member>
        <member name="T:RockyHockey.Common.Logger">
            <summary>
            Base class for a logger implementation that contains the funcionality to
            log every inner exception of an exception
            </summary>
        </member>
        <member name="M:RockyHockey.Common.Logger.Log(System.String)">
            <summary>
            Writes the string into the log
            </summary>
            <param name="text">String to log</param>
            <returns>executeable Task</returns>
        </member>
        <member name="M:RockyHockey.Common.Logger.Log(System.Exception)">
            <summary>
             Writes the exception and its inner exceptions into the log
            </summary>
            <param name="ex">Exception to log</param>
            <returns>executeable Task</returns>
        </member>
        <member name="T:RockyHockey.Common.ObjectSerializer">
            <summary>
            Has the functionality to serialize an object to a file
            </summary>
        </member>
        <member name="M:RockyHockey.Common.ObjectSerializer.SerializeObject``1(``0,System.String)">
            <summary>
            Serializes the surpassed object into a file
            </summary>
            <typeparam name="T">Type of the object to serialize</typeparam>
            <param name="serializableObject">object to serialize</param>
            <param name="fileName">name of the file to write to</param>
            <returns>executeable Task</returns>
        </member>
        <member name="M:RockyHockey.Common.ObjectSerializer.DeserializeObject``1(System.String)">
            <summary>
            Seserializes a object from a file and returns the instance of this object
            </summary>
            <typeparam name="T">type of the deserialized object</typeparam>
            <param name="fileName">name of the file to read from</param>
            <returns>instance of the deserialized object</returns>
        </member>
        <member name="T:RockyHockey.Common.Score">
            <summary>
            Score of the actual game
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Score.HumanGoals">
            <summary>
            Goals of the human player
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Score.RobotGoals">
            <summary>
            Goals of the robot player
            </summary>
        </member>
        <member name="E:RockyHockey.Common.Score.PropertyChanged">
            <summary>
            PropertyChangedEvent
            </summary>
        </member>
        <member name="T:RockyHockey.Common.TextFileLogger">
            <summary>
            Logger that logs into a text file
            </summary>
        </member>
        <member name="M:RockyHockey.Common.TextFileLogger.#ctor(System.String)">
            <summary>
            Creates a new Instance of the TextFileLogger with the surpassed file
            </summary>
            <param name="logFile">file with its path</param>
        </member>
        <member name="M:RockyHockey.Common.TextFileLogger.Log(System.String)">
            <summary>
            Writes the String into the Logfile
            </summary>
            <param name="text">String to log</param>
            <returns>executeable Task</returns>
        </member>
        <member name="T:RockyHockey.Common.Vector">
            <summary>
            Klasse, die einen 2D-Vektor repr√§sentiert
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Vector.Position">
            <summary>
            X-Achse
            </summary>
        </member>
        <member name="P:RockyHockey.Common.Vector.Direction">
            <summary>
            X-Length
            </summary>
        </member>
        <member name="T:RockyHockey.Common.VectorExtensions">
            <summary>
            Class that contains extension methods for the Vector class
            </summary>
        </member>
        <member name="M:RockyHockey.Common.VectorExtensions.StretchVectorToXCoordinate(RockyHockey.Common.Vector,System.Double)">
            <summary>
            Stretches the Vector till the barrier
            If the Vector shows upwards, then the yBarrier is set to 0
            </summary>
            <param name="vec">Vector to Call the Method</param>
            <param name="yBarrier">position of the barrier</param>
            <returns>longer vector to the yBarrier</returns>
        </member>
        <member name="M:RockyHockey.Common.VectorExtensions.StretchVectorToYCoordinate(RockyHockey.Common.Vector,System.Double)">
            <summary>
            Stretches the Vector till the barrier
            If the Vector shows upwards, then the xBarrier is set to 0
            </summary>
            <param name="vec">Vector to Call the Method</param>
            <param name="xBarrier">position of the barrier</param>
            <returns>longer vector to the xBarrier</returns>
        </member>
        <member name="M:RockyHockey.Common.VectorExtensions.CalculateReflectedVector(RockyHockey.Common.Vector)">
            <summary>
            Calculates the reflected Vector for the Vector has called this method
            </summary>
            <param name="vec">Vector to Call the Method</param>
            <returns>reflected vector</returns>
        </member>
        <member name="M:RockyHockey.Common.VectorExtensions.GetZeroVector(RockyHockey.Common.Vector)">
            <summary>
            Calculates the zero vector for the surpasses vector
            </summary>
            <param name="vec">Vector to Call the Method</param>
            <returns>zero vector</returns>
        </member>
        <member name="M:RockyHockey.Common.VectorExtensions.GetVectorGradient(RockyHockey.Common.Vector)">
            <summary>
            Calculates the gradient of the Vector
            </summary>
            <param name="vec">Vector to Call the Method</param>
            <returns>gradient</returns>
        </member>
        <member name="M:RockyHockey.Common.VectorExtensions.GetVectorLength(RockyHockey.Common.Vector)">
            <summary>
            Calculates the length of the Vector
            </summary>
            <param name="vec">Vector to Call the Method</param>
            <returns>length of the Vector</returns>
        </member>
        <member name="T:RockyHockey.Common.VelocityVector">
            <summary>
            Vector with its velocity
            </summary>
        </member>
        <member name="P:RockyHockey.Common.VelocityVector.Velocity">
            <summary>
            Velocity in pixel per second
            </summary>
        </member>
    </members>
</doc>
