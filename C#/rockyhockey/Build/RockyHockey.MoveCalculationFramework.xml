<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RockyHockey.MoveCalculationFramework</name>
    </assembly>
    <members>
        <member name="T:RockyHockey.MoveCalculationFramework.IMoveCalculationProvider">
            <summary>
            Schnittstelle für das MoveCalculationFramework
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.IMoveCalculationProvider.StartCalculation(System.IProgress{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{RockyHockey.Common.Vector}}})">
            <summary>
            Stoßt das die implementierte KI an
            </summary>
            <returns></returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.IMoveCalculationProvider.StopCalculation">
            <summary>
            Stoppt die KI
            </summary>
            <returns></returns>
        </member>
        <member name="T:RockyHockey.MoveCalculationFramework.IStrategy">
            <summary>
            Interface for the different strategies
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.IStrategy.getTangent(RockyHockey.Common.GameFieldPosition,RockyHockey.Common.GameFieldPosition)">
            <summary>
            Calcualte a tangent to the circle on which the trajectory for the bat is
            </summary>
            <param name="impactPosition">Position where the puck will be played</param>
            <param name="goalPosition">Position of the goal</param>
            <returns>Tangent to the circle on which the trajectory for the bat is</returns>
        </member>
        <member name="T:RockyHockey.MoveCalculationFramework.IStrategyCalculationFramework">
            <summary>
            Interface for the stragey calculation
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.IStrategyCalculationFramework.CalculateStartegy(RockyHockey.Common.GameFieldPosition,System.Double,System.Double)">
            <summary>
            Calculates a punch strategy
            </summary>
            <param name="actionGate">position where the puck should be hit</param>
            <param name="timeLeft">time left in milliseconds</param>
            <param name="angle">angle of the incoming puck</param>
            <returns></returns>
        </member>
        <member name="T:RockyHockey.MoveCalculationFramework.MoveCalculationProvider">
            <summary>
            Implementierung des MoveCalculationProvider
            </summary>
        </member>
        <member name="F:RockyHockey.MoveCalculationFramework.MoveCalculationProvider.trajectoryCalculationFramework">
            <summary>
            private Field, which contains an Instance from TrajectoryCalculationFramework.
            The Initialization executes just once.
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.MoveCalculationProvider.StartCalculation(System.IProgress{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{RockyHockey.Common.Vector}}})">
            <summary>
            Method, to start the caculation-loop in the TrajectoryCalculationFramework class
            </summary>
            <returns>executeable Task</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.MoveCalculationProvider.StopCalculation">
            <summary>
            Method, to stop the caculationloop in the TrajectoryCalculationFramework class
            </summary>
            <returns>executeable Task</returns>
        </member>
        <member name="T:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework">
            <summary>
            Class that calculates the way the bat has to move depending on different strategies
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework.#ctor(RockyHockey.MovementFramework.IMovementController,RockyHockey.Common.GameFieldPosition)">
            <summary>
            Constructs a new instance of the StrategyCalculationFramework
            </summary>
            <param name="movementController">Instance of the movementController</param>
            <param name="batRestPosition">default position of the bat</param>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework.CalculateStartegy(RockyHockey.Common.GameFieldPosition,System.Double,System.Double)">
            <summary>
            Method to get that calculates a way for the bat and send the calculated vectors to the movementController
            </summary>
            <param name="impactPosition">Position where the puck will be played</param>
            <param name="timeLeft">The time which is left to move the bat to the impactPosition</param>
            <param name="angle">Angle in which the puck will fly to the impactPosition</param>
            <returns></returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework.CalculateGoalTrajectory(RockyHockey.Common.GameFieldPosition)">
            <summary>
            Method to calculate the vector from the impactPosition to the goal
            </summary>
            <param name="impactPosition">Position where the puck will be played</param>
            <returns>First vector of the trajectory from the impact point to the goal</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework.CalculateGoalPosition(System.Drawing.Size)">
            <summary>
            Method to calculate the midpoint of the goal
            </summary>
            <param name="gameFieldSize">Size of the game field</param>
            <returns>The midpoint of the goal</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework.CalculateMidpointCircle(System.Double,RockyHockey.Common.GameFieldPosition)">
            <summary>
            Method to calculate the midpoint of the circle on which the bat will move
            </summary>
            <param name="pitchImpactVector">The pitch of the vector to the goal</param>
            <param name="impactPosition">Position where the puck will be played</param>
            <returns>Midpoint of the circle on which the trajectory is</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework.CalculateBatTrajectory(RockyHockey.Common.GameFieldPosition,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates number of velocityVectors for the movementController
            </summary>
            <param name="midpointCircle">Midpoint of the circle on which the trajectory is</param>
            <param name="radiusCircle">Radius of the circle on which the trajectory is</param>
            <param name="pitchImpactVector">The pitch of the vector from the impact point to the goal</param>
            <param name="impactHeight">The Y Coordinate of the impactPosition</param>
            <param name="angle">angle of the puck at impact</param>
            <returns>List of velocityVectors</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework.CalculateYDirection(RockyHockey.Common.GameFieldPosition,System.Double,System.Char,System.Double)">
            <summary>
            Method to calculate the y coordinate of a point of a vector on the circle on which the trajectory is
            </summary>
            <param name="midpointCircle">Midpoint of the circle on which the trajectory is</param>
            <param name="radiusCircle">Radius of the circle on which the trajectory is</param>
            <param name="sign">Sign of the pitch of the vector from the impact point to the goal</param>
            <param name="xDirection">X coordinate of a point of a vector on the circle on which the trajectory is</param>
            <returns>Y coordinate of a point of a vector on the circle on which the trajectory is</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework.CalculateDirectPunch(RockyHockey.Common.GameFieldPosition)">
            <summary>
            Method to calculate a single velocity vector from the bat position to the impact position
            </summary>
            <param name="impactPosition">Position where the puck will be played</param>
            <returns>List with a single velocity vector</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework.IsOutOfGamefield(System.Collections.Generic.IEnumerable{RockyHockey.Common.VelocityVector})">
            <summary>
            Method to check if the calculated trajectory of the bat will be out of the gamefield
            </summary>
            <param name="trajectoryVectors">List of velocity vectors</param>
            <returns>True if at least one velocity vector will be out of the gamefield</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyCalculationFramework.CalculateDelayTime(System.Collections.Generic.IEnumerable{RockyHockey.Common.VelocityVector},System.Double)">
            <summary>
            Calculates the time which will be needed to move to bat on the calculated trajectory
            </summary>
            <param name="batTrajectory">List with velocityVectors which describe the trajectory for the bat</param>
            <param name="timeLeft">The time which is left until the puck will be at the impact position</param>
            <returns>The difference of the timeLeft and the needed Time to move the bat</returns>
        </member>
        <member name="T:RockyHockey.MoveCalculationFramework.StrategyDirect">
            <summary>
            Class where a tangent from the impact position to the goal is calculated directly
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyDirect.getTangent(RockyHockey.Common.GameFieldPosition,RockyHockey.Common.GameFieldPosition)">
            <summary>
            Calcualte a tangent to the circle on which the trajectory for the bat is
            </summary>
            <param name="impactPosition">Position where the puck will be played</param>
            <param name="goalPosition">Position of the goal</param>
            <returns>Tangent to the circle on which the trajectory for the bat is</returns>
        </member>
        <member name="T:RockyHockey.MoveCalculationFramework.StrategyOneBank">
            <summary>
            Class where a tangent from the impact position to the goal is calculated over one bank
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyOneBank.#ctor(System.Drawing.Size)">
            <summary>
            Constructs a new instance of the StrategyOnebank
            </summary>
            <param name="gameFieldSize">Size of the game field</param>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyOneBank.getTangent(RockyHockey.Common.GameFieldPosition,RockyHockey.Common.GameFieldPosition)">
            <summary>
            Calcualte a tangent to the circle on which the trajectory for the bat is
            </summary>
            <param name="impactPosition">Position where the puck will be played</param>
            <param name="goalPosition">Position of the goal</param>
            <returns>Tangent to the circle on which the trajectory for the bat is</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.StrategyOneBank.calculateReflactingPoint(RockyHockey.Common.GameFieldPosition,RockyHockey.Common.GameFieldPosition)">
            <summary>
            Calculates the position where the puck  must hit the bank
            </summary>
            <param name="impactPosition">Position where the puck will be played</param>
            <param name="goalPosition">position of the goal</param>
            <returns>Position where the puck must hit the bank</returns>
        </member>
        <member name="T:RockyHockey.MoveCalculationFramework.TrajectoryCalculationFramework">
            <summary>
            Class that contains the calculationloop
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.TrajectoryCalculationFramework.#ctor">
            <summary>
            Constructs a new Instance of the TrajectoryCalculationFramework
            </summary>
        </member>
        <member name="P:RockyHockey.MoveCalculationFramework.TrajectoryCalculationFramework.KeepPlaying">
            <summary>
            Determines wether the game continuous or not
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.TrajectoryCalculationFramework.BeginCalculationLoop(System.IProgress{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{RockyHockey.Common.Vector}}})">
            <summary>
            Method, to start the actual calculationloop
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.TrajectoryCalculationFramework.StopAllUsedFrameworks">
            <summary>
            Closes all open resources
            </summary>
            <returns>executeable Task</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.TrajectoryCalculationFramework.CalculatePuckTrajectory(RockyHockey.Common.Vector,System.Drawing.Size)">
            <summary>
            Calculates the impact position of the puck on the imaginary axis
            </summary>
            <param name="vec">Vector of the Puck</param>
            <param name="gameFieldSize">Size of the gamefield</param>
            <returns>Enumerable of Vectors, that describe the trajectory of the puck</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.TrajectoryCalculationFramework.CalculateBatRestPosition(System.Drawing.Size)">
            <summary>
            Calculates the ideal Position for the bat to rest till the enemy is about to hit the puck
            </summary>
            <param name="gameFieldSize">Size of picture from the cameras</param>
            <returns>position for the bat to rest</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.TrajectoryCalculationFramework.MoveBatToRestPosition(RockyHockey.Common.GameFieldPosition)">
            <summary>
            Moves the bat to the restposition
            </summary>
            <param name="batRestPosition">Position in front of the goal</param>
            <returns>executeable Task</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.TrajectoryCalculationFramework.CalculateNeededTime(System.Collections.Generic.IEnumerable{RockyHockey.Common.Vector},System.Double)">
            <summary>
            Calculates the needed time for the puck to fly the trajectoryVectors
            </summary>
            <param name="trajectoryVectors">trajectory of the puck</param>
            <param name="velocity">velocity of the puck in pixels per milliseconds</param>
            <returns>needed time for the puck to fly the trajectoryVectors</returns>
        </member>
        <member name="T:RockyHockey.MoveCalculationFramework.VectorCalculationProvider">
            <summary>
            Class that can calculate the Vector of the puck based on its positions
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.VectorCalculationProvider.#ctor(RockyHockey.MotionCaptureFramework.IMotionCaptureProvider)">
            <summary>
            Constructs a new instance of the VectorCalculationProvider
            </summary>
            <param name="motionCaptureProvider">motionCaptureProvider to get the positions of the puck</param>
        </member>
        <member name="F:RockyHockey.MoveCalculationFramework.VectorCalculationProvider.cameraFrameRate">
            <summary>
            Amount of frames the camera records per second
            </summary>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.VectorCalculationProvider.CalculatePuckVector">
            <summary>
            Calculates the vector that describes the trajectory of the puck
            </summary>
            <returns>calculatedvVector of the puck with its velocity</returns>
        </member>
        <member name="M:RockyHockey.MoveCalculationFramework.VectorCalculationProvider.CalculatePuckVelocity(System.Collections.Generic.IEnumerable{RockyHockey.Common.FrameVector})">
            <summary>
            Creates single vectors of the puck and calculates the average velocity
            </summary>
            <returns>velocity of the puck in pixels per millisecond</returns>
        </member>
    </members>
</doc>
